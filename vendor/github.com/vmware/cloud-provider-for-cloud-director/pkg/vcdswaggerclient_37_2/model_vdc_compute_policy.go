/*
 * VMware Cloud Director OpenAPI
 *
 * VMware Cloud Director OpenAPI is a new API that is defined using the OpenAPI standards.<br/> This ReSTful API borrows some elements of the legacy VMware Cloud Director API and establishes new patterns for use as described below. <h4>Authentication</h4> Authentication and Authorization schemes are the same as those for the legacy APIs. You can authenticate using the JWT token via the <code>Authorization</code> header or specifying a session using <code>x-vcloud-authorization</code> (The latter form is deprecated). <h4>Operation Patterns</h4> This API follows the following general guidelines to establish a consistent CRUD pattern: <table> <tr>   <th>Operation</th><th>Description</th><th>Response Code</th><th>Response Content</th> </tr><tr>   <td>GET /items<td>Returns a paginated list of items<td>200<td>Response will include Navigational links to the items in the list. </tr><tr>   <td>POST /items<td>Returns newly created item<td>201<td>Content-Location header links to the newly created item </tr><tr>   <td>GET /items/urn<td>Returns an individual item<td>200<td>A single item using same data type as that included in list above </tr><tr>   <td>PUT /items/urn<td>Updates an individual item<td>200<td>Updated view of the item is returned </tr><tr>   <td>DELETE /items/urn<td>Deletes the item<td>204<td>No content is returned. </tr> </table> <h5>Asynchronous operations</h5> Asynchronous operations are determined by the server. In those cases, instead of responding as described above, the server responds with an HTTP Response code 202 and an empty body. The tracking task (which is the same task as all legacy API operations use) is linked via the URI provided in the <code>Location</code> header.<br/> All API calls can choose to service a request asynchronously or synchronously as determined by the server upon interpreting the request. Operations that choose to exhibit this dual behavior will have both options documented by specifying both response code(s) below. The caller must be prepared to handle responses to such API calls by inspecting the HTTP Response code. <h5>Error Conditions</h5> <b>All</b> operations report errors using the following error reporting rules: <ul>   <li>400: Bad Request - In event of bad request due to incorrect data or other user error</li>   <li>401: Bad Request - If user is unauthenticated or their session has expired</li>   <li>403: Forbidden - If the user is not authorized or the entity does not exist</li> </ul> <h4>OpenAPI Design Concepts and Principles</h4> <ul>   <li>IDs are full Uniform Resource Names (URNs).</li>   <li>OpenAPI's <code>Content-Type</code> is always <code>application/json</code></li>   <li>REST links are in the Link header.</li>   <ul>     <li>Multiple relationships for any link are represented by multiple values in a space-separated list.</li>     <li>Links have a custom VMware Cloud Director-specific &quot;model&quot; attribute that hints at the applicable data         type for the links.</li>     <li>title + rel + model attributes evaluates to a unique link.</li>     <li>Links follow Hypermedia as the Engine of Application State (HATEOAS) principles. Links are present if         certain operations are present and permitted for the user&quot;s current role and the state of the         referred entities.</li>   </ul>   <li>APIs follow a flat structure relying on cross-referencing other entities instead of the navigational style       used by the legacy VMware Cloud Director APIs.</li>   <li>Most endpoints that return a list support filtering and sorting similar to the query service in the legacy       VMware Cloud Director APIs.</li>   <li>Accept header must be included to specify the API version for the request similar to calls to existing legacy       VMware Cloud Director APIs.</li>   <li>Each feature has a version in the path element present in its URL.<br/>       <b>Note</b> API URL's without a version in their paths must be considered experimental.</li> </ul> 
 *
 * API version: 37.2
 * Contact: https://code.vmware.com/support
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

// Definition of VdcComputePolicy. 
type VdcComputePolicy struct {
	// UUID for vDC compute policy. This is immutable. 
	Id string `json:"id,omitempty"`
	Description string `json:"description,omitempty"`
	// Display name. 
	Name string `json:"name"`
	// The CPU speed in MHz of this VM. This is optional. When provided, VMs with this policy cannot have more than CPU speed defined by this field. 
	CpuSpeed int64 `json:"cpuSpeed,omitempty"`
	// The maximum memory in MB allowed for a VM. This is optional. When provided, VMs with this policy cannot have configured memory more than defined by this field. 
	Memory int64 `json:"memory,omitempty"`
	// The maximum number of CPUs allowed for a VM. This is optional. When provided, VMs with this policy cannot have more than number of CPUs defined by this field. 
	CpuCount int32 `json:"cpuCount,omitempty"`
	// The cores per socket to be configured for the VM where this policy is applied. 
	CoresPerSocket int32 `json:"coresPerSocket,omitempty"`
	// The factor of the configured memory reserved for the VM on which this policy is applied. 
	MemoryReservationGuarantee float64 `json:"memoryReservationGuarantee,omitempty"`
	// The factor of the configured CPU reserved for the VM on which this policy is applied. 
	CpuReservationGuarantee float64 `json:"cpuReservationGuarantee,omitempty"`
	// The limit of CPU in MHz for the VM on which this policy is applied. -1 means unlimited. This is optional. If not provided, limit would be equal to the vCPUSpeed multiplied by numCPU. 
	CpuLimit int64 `json:"cpuLimit,omitempty"`
	// The limit of memory in MB for the VM on which this policy is applied. -1 means unlimited. This is optional. If not provided, limit would be equal to the configured memory of the VM. 
	MemoryLimit int64 `json:"memoryLimit,omitempty"`
	// The number of CPU shares for the VM on which this policy is applied. This is optional. If not provided, Normal shares would be applied to the VM. 
	CpuShares int32 `json:"cpuShares,omitempty"`
	// The number of memory shares for the VM on which this policy is applied. This is optional. If not provided, Normal shares would be applied to the VM. 
	MemoryShares int32 `json:"memoryShares,omitempty"`
	// Map of extra configs to be set on the VM with this policy. 
	ExtraConfigs map[string]string `json:"extraConfigs,omitempty"`
	// Deprecated in Api 32.0, this property will be removed in future release. 
	PvdcComputePolicyRef *EntityReference `json:"pvdcComputePolicyRef,omitempty"`
	// This field cannot be updated and is a read-only field in the client after creation. 
	PvdcComputePolicy *EntityReference `json:"pvdcComputePolicy,omitempty"`
	// A list of read-only compatible vDC types for this policy.
	CompatibleVdcTypes []string `json:"compatibleVdcTypes,omitempty"`
	// This field cannot be updated and is a read-only field in the client after creation. It defines whether the policy is SIZING_ONLY or if it also contains affinity information. 
	IsSizingOnly bool `json:"isSizingOnly,omitempty"`
	// URN for Provider VDC. 
	PvdcId string `json:"pvdcId,omitempty"`
	// List of list of vmGroups grouped together in a meaningful manner. A group of vmGroups would consist of one functionally equal vmGroup picked from each cluster of the pvdc. 
	NamedVmGroups [][]EntityReference `json:"namedVmGroups,omitempty"`
	// List of logical vm group references. This value is set at creation time and cannot be edited later. 
	LogicalVmGroupReferences []EntityReference `json:"logicalVmGroupReferences,omitempty"`
	// This field cannot be updated and is a read-only field in the client. It defines if the policy is auto-generated. 
	IsAutoGenerated bool `json:"isAutoGenerated,omitempty"`
}
