apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: testcluster
  labels:
    cni: antrea # Ensure these labels match CRS specified labels
    cpi: cpi-crs # Ensure these labels match CRS specified labels
    csi: csi-crs # Ensure these labels match CRS specified labels
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 100.96.0.0/11 # pod CIDR for the cluster
    serviceDomain: k8s.test
    services:
      cidrBlocks:
        - 100.64.0.0/13 # service CIDR for the clusterrdeId
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: testcluster-control-plane # name of the KubeadmControlPlane object associated with the cluster.
    namespace: default # kubernetes namespace in which the KubeadmControlPlane object reside. Should be the same namespace as that of the Cluster object
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: VCDCluster
    name: testcluster # name of the VCDCluster object associated with the cluster.
    namespace: default # kubernetes namespace in which the VCDCluster object resides. Should be the same namespace as that of the Cluster object
---
apiVersion: v1
kind: Secret
metadata:
  name: capi-user-credentials
  namespace: default
type: Opaque
data:
  username: __USERNAMEB64__ # B64 Username
  refreshToken: __REFRESHTOKENB64__ # B64 RefreshToken
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VCDCluster
metadata:
  name: testcluster
  namespace: default
spec:
  site: __VCDSITE__ # VCD endpoint with the format https://VCD_HOST. No trailing '/'
  org: __ORG__ # VCD organization name where the cluster should be deployed
  ovdc: __OVDC__ # VCD virtual datacenter name where the cluster should be deployed
  ovdcNetwork: __OVDCNW__ # VCD virtual datacenter network to be used by the cluster
  # loadBalancerConfigSpec:
  #   vipSubnet: null
  useAsManagementCluster: false
  userContext:
    secretRef:
      name: capi-user-credentials
      namespace: default
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VCDMachineTemplate
metadata:
  name: testcluster-control-plane
  namespace: default
spec:
  template:
    spec:
      catalog: __CATALOG__ # Catalog hosting the TKGm template, which will be used to deploy the control plane VMs
      template: __TEMPLATENAME__ # Name of the template to be used to create (or) upgrade the control plane nodes
      sizingPolicy: __SIZINGPOLICY__ # Sizing policy to be used for the control plane VMs (this must be pre-published on the chosen organization virtual datacenter). If no sizing policy should be used, use "".
      storageProfile: __STORAGEPROFILE__ # "*" for example
      # diskSize: 20Gi
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: testcluster-control-plane
  namespace: default
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        certSANs:
          - localhost
          - 127.0.0.1
      controllerManager:
        extraArgs:
          enable-hostpath-provisioner: "true"
      dns:
        imageRepository: projects.registry.vmware.com/tkg # image repository to pull the DNS image from
        imageTag: v1.8.0_vmware.11 # DNS image tag associated with the TKGm OVA used. The values must be retrieved from the TKGm ova BOM. Refer to the github documentation for more details
      etcd:
        local:
          imageRepository: projects.registry.vmware.com/tkg # image repository to pull the etcd image from
          imageTag: v3.4.13_vmware.25 # etcd image tag associated with the TKGm OVA used. The values must be retrieved from the TKGm ova BOM. Refer to the github documentation for more details
      imageRepository: projects.registry.vmware.com/tkg # image repository to use for the rest of kubernetes images
    users:
      - name: root
        sshAuthorizedKeys:
          - __SSHKEY__ # ssh public key to log in to the control plane VMs in VCD
    initConfiguration:
      nodeRegistration:
        criSocket: /run/containerd/containerd.sock
        kubeletExtraArgs:
          eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
          cloud-provider: external
    joinConfiguration:
      nodeRegistration:
        criSocket: /run/containerd/containerd.sock
        kubeletExtraArgs:
          eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
          cloud-provider: external
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: VCDMachineTemplate
      name: testcluster-control-plane # name of the VCDMachineTemplate object used to deploy control plane VMs. Should be the same name as that of KubeadmControlPlane object
      namespace: default # kubernetes namespace of the VCDMachineTemplate object. Should be the same namespace as that of the Cluster object
  replicas: 1 # desired number of control plane nodes for the cluster
  version: v1.21.8+vmware.1 # Kubernetes version to be used to create (or) upgrade the control plane nodes. The value needs to be retrieved from the respective TKGm ova BOM. Refer to the documentation.
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VCDMachineTemplate
metadata:
  name: testcluster-md0
  namespace: default
spec:
  template:
    spec:
      catalog: __CATALOG__ # Catalog hosting the TKGm template, which will be used to deploy the worker VMs
      template: __TEMPLATENAME__ # Name of the template to be used to create (or) upgrade the worker nodes
      sizingPolicy: __SIZINGPOLICY__ # Sizing policy to be used for the worker VMs (this must be pre-published on the chosen organization virtual datacenter). If no sizing policy should be used, use "".
      storageProfile: __STORAGEPROFILE__ # "*" for example
      # enableNvidiaGPU: false
      # diskSize: 20Gi
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: testcluster-md0
  namespace: default
spec:
  template:
    spec:
      users:
        - name: root
          sshAuthorizedKeys:
            - __SSHKEY__ # ssh public key to log in to the control plane VMs in VCD
      joinConfiguration:
        nodeRegistration:
          criSocket: /run/containerd/containerd.sock
          kubeletExtraArgs:
            eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
            cloud-provider: external
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: testcluster-md0
  namespace: default
spec:
  clusterName: testcluster # name of the Cluster object
  replicas: 1 # desired number of worker nodes for the cluster
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: testcluster-md0 # name of the KubeadmConfigTemplate object
          namespace: default # kubernetes namespace of the KubeadmConfigTemplate object. Should be the same namespace as that of the Cluster object
      clusterName: testcluster # name of the Cluster object
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VCDMachineTemplate
        name: testcluster-md0 # name of the VCDMachineTemplate object used to deploy worker nodes
        namespace: default # kubernetes namespace of the VCDMachineTemplate object used to deploy worker nodes
      version: v1.21.8+vmware.1 # Kubernetes version to be used to create (or) upgrade the worker nodes. The value needs to be retrieved from the respective TKGm ova BOM.
