apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
  name: capvcd-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
    controller-gen.kubebuilder.io/version: v0.4.1
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
    cluster.x-k8s.io/v1alpha4: v1alpha4
  name: vcdclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: capvcd-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: VCDCluster
    listKind: VCDClusterList
    plural: vcdclusters
    singular: vcdcluster
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: VCDCluster is the Schema for the vcdclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VCDClusterSpec defines the desired state of VCDCluster
            properties:
              controlPlaneEndpoint:
                description: APIEndpoint represents a reachable Kubernetes API endpoint.
                properties:
                  host:
                    description: Host is the hostname on which the API server is serving.
                    type: string
                  port:
                    description: Port is the port on which the API server is serving.
                    type: integer
                required:
                - host
                - port
                type: object
              defaultComputePolicy:
                type: string
              org:
                type: string
              ovdc:
                type: string
              ovdcNetwork:
                type: string
              site:
                type: string
              userContext:
                properties:
                  password:
                    type: string
                  refreshToken:
                    type: string
                  username:
                    type: string
                type: object
            required:
            - org
            - ovdc
            - ovdcNetwork
            - site
            - userContext
            type: object
          status:
            description: VCDClusterStatus defines the observed state of VCDCluster
            properties:
              conditions:
                description: Conditions defines current service state of the VCDCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              infraId:
                type: string
              ready:
                description: Ready denotes that the vcd cluster (infrastructure) is
                  ready.
                type: boolean
            required:
            - ready
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
    controller-gen.kubebuilder.io/version: v0.4.1
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
    cluster.x-k8s.io/v1alpha4: v1alpha4
  name: vcdmachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: capvcd-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: VCDMachine
    listKind: VCDMachineList
    plural: vcdmachines
    singular: vcdmachine
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: VCDMachine is the Schema for the vcdmachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VCDMachineSpec defines the desired state of VCDMachine
            properties:
              bootstrapped:
                description: Bootstrapped is true when the kubeadm bootstrapping has
                  been run against this machine
                type: boolean
              catalog:
                description: Catalog hosting templates
                type: string
              computePolicy:
                description: ComputePolicy is the compute policy to be used on this
                  machine
                type: string
              providerID:
                description: ProviderID will be the container name in ProviderID format
                  (vmware-cloud-director://<vm id>)
                type: string
              template:
                description: TemplatePath is the path of the template OVA that is
                  to be used
                type: string
            type: object
          status:
            description: VCDMachineStatus defines the observed state of VCDMachine
            properties:
              addresses:
                description: Addresses contains the associated addresses for the docker
                  machine.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the DockerMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              ready:
                description: Ready denotes that the machine (docker container) is
                  ready
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
    controller-gen.kubebuilder.io/version: v0.4.1
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
    cluster.x-k8s.io/v1alpha4: v1alpha4
  name: vcdmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: capvcd-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: VCDMachineTemplate
    listKind: VCDMachineTemplateList
    plural: vcdmachinetemplates
    singular: vcdmachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: VCDMachineTemplate is the Schema for the vcdmachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VCDMachineTemplateSpec defines the desired state of VCDMachineTemplate
            properties:
              template:
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      bootstrapped:
                        description: Bootstrapped is true when the kubeadm bootstrapping
                          has been run against this machine
                        type: boolean
                      catalog:
                        description: Catalog hosting templates
                        type: string
                      computePolicy:
                        description: ComputePolicy is the compute policy to be used
                          on this machine
                        type: string
                      providerID:
                        description: ProviderID will be the container name in ProviderID
                          format (vmware-cloud-director://<vm id>)
                        type: string
                      template:
                        description: TemplatePath is the path of the template OVA
                          that is to be used
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: VCDMachineTemplateStatus defines the observed state of VCDMachineTemplate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
  name: capvcd-controller-manager
  namespace: capvcd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
  name: capvcd-leader-election-role
  namespace: capvcd-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
  name: capvcd-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vcdclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vcdclusters/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vcdclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vcdmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vcdmachines/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vcdmachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vcdmachinetemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinedeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - kubeadmconfigtemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
  name: capvcd-leader-election-rolebinding
  namespace: capvcd-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capvcd-leader-election-role
subjects:
- kind: ServiceAccount
  name: capvcd-controller-manager
  namespace: capvcd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
  name: capvcd-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capvcd-manager-role
subjects:
- kind: ServiceAccount
  name: capvcd-controller-manager
  namespace: capvcd-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    vcd:
      host: ${VCD_SITE} # VCD endpoint with the format https://VCD_HOST. No trailing '/'
      org: ${VCD_ORGANIZATION} # organization name associated with the user logged in to deploy clusters
      vdc: ${VCD_ORGANIZATION_VDC} # VDC name where the cluster will be deployed
      network: ${VCD_ORGANIZATION_VDC_NETWORK} # OVDC network to use for cluster deployment
      vipSubnet: ${VCD_VIP_CIDR} # Virtual IP CIDR for the external network
    loadbalancer:
      oneArm:
        startIP: "192.168.8.2" # First IP in the IP range used for load balancer virtual service
        endIP: "192.168.8.100" # Last IP in the IP range used for load balancer virtual service
      ports:
        http: 80
        https: 443
        tcp: 6443
    # managementClusterRDEId is the RDE ID of this management cluster if it exists; if this cluster is a child of another CAPVCD based cluster,
    # an associated RDE will be created in VCD of Entity Type "urn:vcloud:type:vmware:capvcdCluster:1.0.0".
    # Retrieve that RDEId using the API - https://VCD_IP/cloudapi/1.0.0/entities/types/vmware/capvcdCluster/1.0.0
    managementClusterRDEId: ""
    clusterResourceSet:
      csi: 1.1.0 # CSI version to be used in the workload cluster
      cpi: 1.1.0 # CPI version to be used in the workload cluster
      cni: 0.11.3 # Antrea version to be used in the workload cluster
kind: ConfigMap
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
  name: capvcd-manager-config
  namespace: capvcd-system
---
apiVersion: v1
data:
  password: ${VCD_PASSWORD_B64}
  username: ${VCD_USERNAME_B64}
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
  name: capvcd-vcloud-basic-auth
  namespace: capvcd-system
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vcd
    control-plane: controller-manager
  name: capvcd-controller-manager
  namespace: capvcd-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-vcd
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-vcd
        control-plane: controller-manager
    spec:
      containers:
      - command:
        - /opt/vcloud/bin/cluster-api-provider-cloud-director
        image: harbor-repo.vmware.com/vcloud/cluster-api-provider-cloud-director:main-branch
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 2048Mi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /etc/kubernetes/vcloud
          name: controller-manager-config-volume
        - mountPath: /etc/kubernetes/vcloud/basic-auth
          name: controller-manager-vcloud-basic-auth-volume
      securityContext:
        runAsNonRoot: false
      serviceAccountName: capvcd-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: capvcd-manager-config
        name: controller-manager-config-volume
      - name: controller-manager-vcloud-basic-auth-volume
        secret:
          secretName: capvcd-vcloud-basic-auth
